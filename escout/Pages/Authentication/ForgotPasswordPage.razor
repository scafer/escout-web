@if (isLoading)
{
	<div class="spinner"></div>
}
else
{
	<p>Insert your username or email to receive a new password.</p>

	<EditForm Model="@user" OnValidSubmit="@EmailMeClicked">
		<div class="row align-items-center">
			<div class="col-5 font-weight-bold">
				<label class="label-right-align">Username:</label>
			</div>
			<div class="col-7 mb-1">
				<InputText @bind-Value="user.Username" placeholder="username" class="form-control" />
				<ValidationMessage For="@(() => user.Username)" />
			</div>
		</div>
		<div class="row align-items-center">
			<div class="col-5 font-weight-bold">
				<label class="label-right-align">E-mail:</label>
			</div>
			<div class="col-7 mb-1">
				<InputText @bind-Value="user.Email" placeholder="user@email.com" class="form-control" />
				<ValidationMessage For="@(() => user.Email)" />
			</div>
		</div>
		<br />
		<div class="row">
			<button value="submit" class="btn btn-primary">Submit</button>
		</div>
	</EditForm>
}

@code {
	[CascadingParameter]
	BlazoredModalInstance BlazoredModal { get; set; }

	private bool isLoading = false;
	private User user = new User();

	private void Cancel()
	{
		BlazoredModal.CancelAsync();
	}

	private async Task EmailMeClicked()
	{
		isLoading = true;
		var response = await new RestConnector().PostObjectAsync(RestConstValues.RESET_PASSWORD, user);

		if (response.IsSuccessStatusCode)
		{
			toastService.ShowSuccess(ConstValues.MSG_RESET_PASSWORD_OK);
			await BlazoredModal.CloseAsync(ModalResult.Ok(true));
		}
		else
		{
			toastService.ShowError(await response.Content.ReadAsStringAsync());
		}

		isLoading = false;
	}
}
