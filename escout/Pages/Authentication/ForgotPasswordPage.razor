
@if (isLoading)
{
    <div class="spinner"></div>
}
else
{
    <p>Insert your username or email to receive a new password.</p>

    <div class="center">
        <EditForm Model="@user" OnValidSubmit="@EmailMeClicked">
            <div class="row justify-content-start">
                <div class="col-5 font-weight-bold">
                    <label class="label-right-align">Username:</label>
                </div>
                <div class="col-7 mb-1">
                    <InputText @bind-Value="user.Username" placeholder="username" class="form-control" />
                    &nbsp;<ValidationMessage For="@(() => user.Username)" />
                </div>
            </div>
            <div class="row justify-content-start">
                <div class="col-5 font-weight-bold">
                    <label class="label-right-align">E-mail:</label>
                </div>
                <div class="col-7 mb-1">
                    <InputText @bind-Value="user.Email" placeholder="user@email.com" class="form-control" />
                    &nbsp;<ValidationMessage For="@(() => user.Email)" />
                </div>
            </div>
            <br />
            <div>
                <button class="btn btn-primary" value="Save">E-mail Me</button>
                <span>&nbsp;</span>
                <button @onclick="Cancel" class="btn btn-secondary" value="Clear">Cancel</button>
            </div>
        </EditForm>
    </div>
}

@code {
    private bool isLoading = false;
    public bool isNotifications = true;
    public User user { get; set; }

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    private void Cancel() => BlazoredModal.Cancel();

    private async Task EmailMeClicked()
    {
        isLoading = true;
        var result = await new escout.Services.AuthenticationService().ForgotPasswordExecuted(user);
        if (result)
        {
            toastService.ShowToast(ToastLevel.Success,@<text>The new password was been send to your e-mail.</text>);
            await BlazoredModal.Close(ModalResult.Ok(true));
        }
        else
            toastService.ShowToast(ToastLevel.Error, @<text>Error!</text>);
        
        isLoading = false;
    }
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Console.WriteLine("ForgotPassword - OnInitialized");
    }
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Console.WriteLine("ForgotPassword - OnInitializedAsync");
        user = new User();
    }
}
