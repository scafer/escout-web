@if (isLoading)
{
    <div class="spinner"></div>
}
else
{
    <p>Insert your sign-up details.</p>
    <div class="center">
        <EditForm Model="@user" OnValidSubmit="@SignUpClicked">
            <div class="row justify-content-start">
                <div class="col-5 font-weight-bold">
                    <label class="label-right-align">Username:</label>
                </div>
                <div class="col-7 mb-1">
                    <InputText @bind-Value="user.Username" placeholder="username" class="form-control" />
                    &nbsp;<ValidationMessage For="@(() => user.Username)" />
                </div>
            </div>
            <div class="row justify-content-start">
                <div class="col-5 font-weight-bold">
                    <label class="label-right-align">E-mail:</label>
                </div>
                <div class="col-7 mb-1">
                    <InputText @bind-Value="user.Email" placeholder="user@email.com" class="form-control" />
                    &nbsp;<ValidationMessage For="@(() => user.Email)" />
                </div>
            </div>
            <div class="row justify-content-start">
                <div class="col-5 font-weight-bold">
                    <label class="label-right-align">Password:</label>
                </div>
                <div class="col-7 mb-1">
                    <InputText @bind-Value="user.Password" placeholder="password" Type="password" class="form-control" />
                    &nbsp;<ValidationMessage For="@(() => user.Password)" />
                </div>
            </div>
            <div class="row justify-content-start">
                <div class="col-5 font-weight-bold">
                    <label class="label-right-align">Repeat Password:</label>
                </div>
                <div class="col-7 mb-1">
                    <InputText @bind-Value="user.PasswordConfirmation" placeholder="password" Type="password" class="form-control" />
                    &nbsp;<ValidationMessage For="@(() => user.Password)" />
                </div>
            </div>
            <div class="row justify-content-start">
                <div class="col-5 font-weight-bold">
                    <label class="label-right-align">Notifications:</label>
                </div>
                <div class="col-7 mb-1">
                    <InputCheckbox @bind-Value="isNotifications" class="form-control" />
                </div>
            </div>
            <br />
            <div>
                <button class="btn btn-primary" value="Submit">Save</button>
            </div>
        </EditForm>
    </div>
}

@code {
    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; }

    private bool isLoading = false;
    public bool isNotifications = true;
    public User user = new User();

    void Cancel()
    {
        BlazoredModal.CancelAsync();
    }

    private async Task SignUpClicked()
    {
        isLoading = true;

        var response = await new RestConnector().PostObjectAsync(RestConstValues.SIGN_UP,
                new User(user.Username, RestUtils.GenerateSha256String(user.Password), user.Email, isNotifications ? 1 : 0));

        if (response.IsSuccessStatusCode)
        {
            toastService.ShowSuccess(ConstValues.MSG_WELCOME);
            await BlazoredModal.CloseAsync(ModalResult.Ok(true));
        }
        else
        {
            toastService.ShowError(await response.Content.ReadAsStringAsync());
        }

        isLoading = false;
    }
}
