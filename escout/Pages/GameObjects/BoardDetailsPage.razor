@page "/boards/{id}"

@if (isLoading)
{
    <div class="spinner"></div>
}
else
{
    <div class="container-fluid">
        <div class="row">
            <div class="col-10">
                <h3></h3>
            </div>
            <div class="col-2">
                @if (!isEditing)
                {
                    <button class="btn btn-info" @onclick="ToogleFavorite">Favorite</button>
                    <button class="btn btn-dark" @onclick="ToggleIsEditing">Edit</button>
                    <button class="btn btn-danger" @onclick="DeleteClicked">Delete</button>
                }
                else
                {
                    <button class="btn btn-dark" @onclick="ToggleIsEditing">Cancel</button>
                    <button class="btn btn-success" @onclick="SaveClicked">Save</button>
                }
            </div>
        </div>
        <div class="row">
            <div class="col-lg-3 justify-content-center">
                <img class="bg-transparent img-thumbnail" src="@(image.ImageUrl)" alt="@(image.Description)" style="height:100%;" />
            </div>
            <div class="col-9">
                <div class="row">
                    <div class="col-lg-12">
                        <h3 class="font-weight-bold">@competition.Name</h3>
                        <h5></h5>
                        <h6 class="text-info">@competition.Edition</h6>
                        <div class="col-9"><hr /></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        <h4 class="font-weight-bold">Competition Details</h4>
                        <div class="row">
                            <div class="col-6">
                                <h6>Name:</h6>
                                <h6>Edition:</h6>
                                <h6>Total games:*</h6>
                                <h6>Faults:*</h6>
                                <h6>Shots:*</h6>
                            </div>
                            <div class="col-6">
                                @if (!isEditing)
                                {
                                    <h6 class="text-info">@competition.Name</h6>
                                    <h6 class="text-info">@competition.Edition</h6>
                                }
                                else
                                {
                                    <input @bind-value="competition.Name" />
                                    <input @bind-value="competition.Edition" />
                                }
                                <h6 class="text-info">0</h6>
                                <h6 class="text-info">0</h6>
                                <h6 class="text-info">0</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row"><div class="col-12"><hr /></div></div>
        <!-- Profile separator from games history -->
        <div class="row">
            <div class="col-12">
                <h3 class="font-weight-bold">Competition Board</h3>
            </div>
            <div class="col-12">
                <div class="center">
                    @*<button class="btn btn-warning m-5" @onclick="LoadStatistics">Load</button>*@
                </div>

                <table class="table">
                    <thead>
                        <tr>
                            <th>Position</th>
                            <th>Club Name</th>
                            <th>Points</th>
                            <th>Played</th>
                            <th>Won</th>
                            <th>Drawn</th>
                            <th>Lost</th>
                            <th>Goals For</th>
                            <th>Goals Against</th>
                            <th>Goals Difference</th>
                            @if (isEditing)
                            {
                                <th>Delete</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var board in competitionBoardWithClubs)
                        {
                            <tr>
                                @if (!isEditing)
                                {
                                    <td>@board.Competition.Position</td>
                                    <td>@board.Club.Name</td>
                                    <td>@board.Competition.Points</td>
                                    <td>@board.Competition.Played</td>
                                    <td>@board.Competition.Won</td>
                                    <td>@board.Competition.Drawn</td>
                                    <td>@board.Competition.Lost</td>
                                    <td>@board.Competition.GoalsFor</td>
                                    <td>@board.Competition.GoalsAgainst</td>
                                    <td>@board.Competition.GoalsDifference</td>
                                }
                                else
                                {
                                    <td><input @bind-value="board.Competition.Position" class="col-lg"/></td>
                                    <td>@board.Club.Name</td>
                                    <td><input @bind-value="board.Competition.Points" class="col-lg"/></td>
                                    <td><input @bind-value="board.Competition.Played" class="col-lg"/></td>
                                    <td><input @bind-value="board.Competition.Won" class="col-lg"/></td>
                                    <td><input @bind-value="board.Competition.Drawn" class="col-lg"/></td>
                                    <td><input @bind-value="board.Competition.Lost" class="col-lg"/></td>
                                    <td><input @bind-value="board.Competition.GoalsFor" class="col-lg"/></td>
                                    <td><input @bind-value="board.Competition.GoalsAgainst" class="col-lg"/></td>
                                    <td><input @bind-value="board.Competition.GoalsDifference" class="col-lg"/></td>
                                    <td><button @onclick="@(() => RemoveCompetitionBoard(board))" class="btn btn-danger col-lg">-</button></td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
                @if (isEditing)
                {
                    <div class="col-12">
                        <h4 class="font-weight-bold">New Entry</h4>
                    </div>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Position</th>
                                <th>Club Name</th>
                                <th>Points</th>
                                <th>Played</th>
                                <th>Won</th>
                                <th>Drawn</th>
                                <th>Lost</th>
                                <th>Goals For</th>
                                <th>Goals Against</th>
                                <th>Goals Difference</th>
                                <th>Save</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><input @bind-value="board1.Position" /></td>
                                <td>
                                    <select @bind="board1.ClubId" class="form-control">
                                        @if (clubs != null)
                                        {
                                            @foreach (var c in clubs)
                                            {
                                                <option value="@c.Id">@c.Name</option>
}}
                                    </select>
                                </td>
                                <td><input @bind-value="board1.Points" class="col-lg"/></td>
                                <td><input @bind-value="board1.Played" class="col-lg"/></td>
                                <td><input @bind-value="board1.Won" class="col-lg"/></td>
                                <td><input @bind-value="board1.Drawn" class="col-lg"/></td>
                                <td><input @bind-value="board1.Lost" class="col-lg"/></td>
                                <td><input @bind-value="board1.GoalsFor" class="col-lg"/></td>
                                <td><input @bind-value="board1.GoalsAgainst" class="col-lg"/></td>
                                <td><input @bind-value="board1.GoalsDifference" class="col-lg"/></td>
                                <td><button @onclick="@(() => CreateCompetitionBoard())" class="btn btn-success col-lg">+</button></td>
                            </tr>
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }
    private bool isLoading = true;
    private bool isEditing = false;

    private BoardsService boardsService;
    private FavoritesService favoritesService;
    private Image image = new Image();
    public List<Club> clubs = new List<Club>();
    private Competition competition = new Competition();
    private CompetitionBoard board1 = new CompetitionBoard();
    private List<CompetitionBoardWithClub> competitionBoardWithClubs = new List<CompetitionBoardWithClub>();

    private void ToggleIsEditing()
    {
        isEditing = isEditing ? false : true;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Start(Id);
    }

    private async void Start(string competitionId)
    {
        favoritesService = new FavoritesService(await localStorage.GetItemAsync<string>(Utils.TOKEN));
        boardsService = new BoardsService(await localStorage.GetItemAsync<string>(Utils.TOKEN));
        competition = await boardsService.GetCompetitionById(int.Parse(competitionId));
        var competitionBoard = await boardsService.GetCompetitionBoardById(int.Parse(competitionId));

        clubs.Add(new Club { Name = "Select..." });
        clubs.AddRange(await new RestUtils(await localStorage.GetItemAsync<string>(Utils.TOKEN)).GetClubs());

        foreach (var board in competitionBoard)
        {
            var club = await RestUtils.GetClubName(await localStorage.GetItemAsync<string>(Utils.TOKEN), board.ClubId);
            competitionBoardWithClubs.Add(new CompetitionBoardWithClub(board, club));
        }

        competitionBoardWithClubs = competitionBoardWithClubs.OrderBy(c => c.Competition.Id).ToList();

        if (competition.ImageId != null)
            image = await new RestUtils(await localStorage.GetItemAsync<string>(Utils.TOKEN)).GetImage(competition.ImageId);
        else
            image = new Image { ImageUrl = "/images/competition_fill-BLUE.svg" };

        isLoading = false;
        base.StateHasChanged();
    }

    private void ClubDetails(int id)
    {
        navigationManager.NavigateTo($"/clubs/{id}");
    }

    private async Task SaveClicked()
    {
        var result = await boardsService.UpdateCompetition(competition);

        foreach(var c in competitionBoardWithClubs)
            _ = boardsService.UpdateCompetitionBoard(c.Competition);

        if (!200.Equals(result.StatusCode))
            toastService.ShowToast(ToastLevel.Error,@<text>Error</text>);
        else
        {
            toastService.ShowToast(ToastLevel.Success, @<text>Athlete updated</text>);
            isEditing = false;
        }
    }

    private async Task CreateCompetitionBoard()
    {
        board1.CompetitionId = competition.Id;
        var result = await boardsService.CreateCompetitionBoard(board1);
        if(result.Count != 0)
        {
            toastService.ShowToast(ToastLevel.Success, @<text>Entry added</text>);
            var club = await RestUtils.GetClubName(await localStorage.GetItemAsync<string>(Utils.TOKEN), result[0].ClubId);
            competitionBoardWithClubs.Add(new CompetitionBoardWithClub(result[0], club));
            board1 = new CompetitionBoard();
            base.StateHasChanged();
        }
        else
        {
            toastService.ShowToast(ToastLevel.Error,@<text>Error</text>);
        }
    }


    private async Task DeleteClicked()
    {
        var result = await boardsService.DeleteCompetition(competition.Id);

        if (!200.Equals(result.StatusCode))
            toastService.ShowToast(ToastLevel.Error,@<text>Error</text>);
        else
        {
            toastService.ShowToast(ToastLevel.Success, @<text>Competition deleted</text>);
            Task.Delay(3000).Wait();
            navigationManager.NavigateTo($"/boards");
        }
    }

    private async Task RemoveCompetitionBoard(CompetitionBoardWithClub competitionBoardWithClub)
    {
        var result = await boardsService.DeleteCompetitionBoard(competitionBoardWithClub.Competition.Id);

        if (!200.Equals(result.StatusCode))
            toastService.ShowToast(ToastLevel.Error,@<text>Error</text>);
        else
        {
            toastService.ShowToast(ToastLevel.Success, @<text>Entry deleted</text>);
            competitionBoardWithClubs.Remove(competitionBoardWithClub);
            base.StateHasChanged();
        }
    }
    
    private async Task ToogleFavorite()
    {
        Favorite favorite = new Favorite();
        favorite.CompetitionId = int.Parse(Id);
        var result = await favoritesService.ToogleFavorite(favorite);
        
        if (!200.Equals(result.StatusCode))
            toastService.ShowToast(ToastLevel.Error,@<text>Error</text>);
        else
        {
            toastService.ShowToast(ToastLevel.Success, @<text>Updated</text>);
            isEditing = false;
        }
    }
}
